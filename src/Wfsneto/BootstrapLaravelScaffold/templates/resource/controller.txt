<?php
[namespace]
class [controller] extends \BaseController
{
    protected $[model];

    public $actions =  [
        'create' => 'Criar',
        'index' => 'Listar',
        'edit' => 'Editar',
        'destroy' => 'Remover',
    ];

    public function __construct(\Eloquent[Model]Repository $[model])
    {
        $this->[model] = $[model];
    }

    public function index()
    {
        $this->layout->content = \View::make('[models].index')->with('[models]', $this->[model]->all());
    }

    public function create()
    {
        $this->layout->content = \View::make('[models].create')->with('[model]', $this->[model]->init());
    }

    public function store()
    {
        $created = $this->[model]->store(\Input::except('_method', '_token'));

        if ($created->validator->success()) {
            return \Redirect::route('[models].edit', $created->model->id)->with('success', $created->validator->message);
        }
        else {
            return \Redirect::back()->withErrors($created->validator->errors)->withInput();
        } # endif;
    }

    public function edit($id)
    {
        $[model] = $this->[model]->find($id);
        if (empty($[model])) \Redirect::back();

        $this->layout->content = \View::make('[models].edit')->with('[model]', $[model]);
    }

    public function update($id)
    {
        $updated = $this->[model]->update($id, \Input::except('_method', '_token'));

        if ($updated->validator->success()) {
            return \Redirect::route('[models].index')->with('success', $updated->validator->message);
        }
        else {
            return \Redirect::back()->withErrors($updated->validator->errors)->withInput();
        } # endif;
    }

    public function show($id)
    {
        $[model] = $this->[model]->find($id);
        if (empty($[model])) \Redirect::back();

        $this->layout->content = \View::make('[models].show')->with('[model]', $[model]);
    }

    public function destroy($id)
    {
        $response = $this->[model]->destroy($id);

        if ($response->validator->success()) {
            return Redirect::route('[models].index')->with('success', $response->validator->message);
        }
        else {
            return Redirect::back()->withErrors($response->validator->errors)->withInput();
        }
    }
}
